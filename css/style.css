
 /* We are using the 'Roboto' font from Google. This has already been added to your HTML header */

body {
    font-family: 'Roboto', sans-serif;
    -webkit-font-smoothing: antialiased;
    background: #a75d1ca3;
}

.navprincipal {
    padding-top: 1.3rem;
}

ul {
    flex-direction: row;
    margin-top: 0.6rem
}

nav a{
    text-decoration:none;
    color:inherit;
    font-size:14px;
} 

nav li{
    display:inline;
    padding:5px 10px;
    background-color:rgb(255, 255, 255);
    text-align:center;
    color:rgb(121 121 121 / 78%);
}

nav li:visited{
    color: black;
    font-weight: 500;
}

nav li:hover{
    color:rgb(224, 124, 30);
}

h1 {
    color: rgb(10, 10, 10);
    font-weight: 100;
    height: 0.5rem;
    font-size: 3rem;
 }

 h4{
     color: rgb(20, 20, 20);
     font-weight: 100;
     padding-bottom: 5rem;
     font-size: 1.5rem;
     margin-left: 1rem;
     margin-right: 1rem;
 }

 p{
     font-size: 1.5rem;
     text-align: center;
 }

   
/* codigo ayuda con https://flexbox.help/ */

/* Cuando trabajamos con flexbox necesitamos pensar en términos de dos ejes — el eje principaly el eje cruzado

display: flex:
Un área del documento que contiene un flexbox es llamada contendedor flex.
 Para crear un contenedor flex, establecemos la propiedad del área del contenedor
  display como flex o inline-flex 
  
  flex-wrap: 
  Cuando los ítems sean demasiados para desplegarlos en una línea, serán repartidos en la línea siguiente
  en este caso no usamos esta propiedad y se deja en nowrap

  flex-direction:
    nos permite cambiar la dirección de cómo los ítems son desplegados
    column: el eje principal se cambiará y los ítems aparecerán en una columna
    row: el eje principal se cambiará y los ítems aparecerán en una fila
    column-reverse: las líneas de inicio y fin serán nuevamente puestas al revés.
  */

.headprincipal{
    display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: baseline;
   /*  margin-left: 4em; */
    margin-right: 4em;
    
}

/* codigo ayuda con https://css-tricks.com/snippets/css/a-guide-to-flexbox/ 
align-self: end; Esto permite que se anule la alineación predeterminada 
(o la especificada por align-items) para elementos flexibles individuales.
*/
    .navprincipal{
     align-self: end;
    }



    .imagenprincipal{
        padding-top: 1.2rem;
        padding-left: 0.5rem;
    }

    /* codigo ayuda con https://css-tricks.com/snippets/css/a-guide-to-flexbox/  */
    
    .mainprincipal{
        
        
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: stretch;
        align-content: stretch;
    }

    .contenido{
        background: url(../img/first-background.jpg);
        width: 100%; 
        height: 600px;
        background-size: cover;
    }

    .cuadroparatextos{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        align-content: center;
        height: 100%;
        text-align: center;
    }

    

     
    /* padding es para dar relleno y espacio  */
    .boton{
            text-decoration:none;
            font-weight: 300;
            font-size: 1rem;
            color: white;
            padding-top:15px;
            padding-bottom:15px;
            padding-left:40px;
            padding-right:40px;
            background-color: rgb(27, 27, 27);
            border-radius:12px;

    }

    .sectiontitulos{
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: baseline;
        align-content: stretch;

    }

    .sectiontitulos p{
       color: rgb(77, 77, 77);
       font-size: 1.7em;
       padding: 3rem 2rem 0px 2rem;
       text-align: center;

    }

    .row4{
        display: flex;
	flex-direction: row;
	justify-content: space-around;
	align-items: center;
	align-content: center;
    }

    .rowcontenido{
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-around;
        align-items: stretch;
        align-content: center;
        width: 100%;
    }


    



   

    /*
    space-between
    es una propiedad abreviada de las propiedades align-contenty justify-content. space-between hace
    que los elementos se distribuyan uniformemente en el contenedor de alineación. El primer elemento 
    se coloca al borde del inicio del contenedor y el ultimo elemento con el borde final, 
    los demas elementos se distribuyen uniformente.  */
    .sectioncontenido  {
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-items: center;
        align-content: center; 
        padding: 0px 10rem 0px 10rem;
    }
    
    @media screen and (max-width: 1299px) {
        .sectioncontenido {
            
             padding: 0% ;
             
        }  
    }

    @media screen and (max-width: 600px) {
        ul {
            display: flex;
            flex-direction: column;
        }
        h1{
            font-size: 2rem
        }

        h4 {
            padding-top: unset; 
            padding-bottom: 11rem;
            font-weight:400;
        }

        div .trigger img {
            padding-bottom: 0.4rem;
            padding-top: 1.5rem;
        }

        .headprincipal{
            margin-bottom: 0.8em;
        }

        .sectioncontenido {
            display: flex;
            flex-direction: column;
             padding: 0% ;
             align-content: center;
             align-items: center;
        }  

        .row4 {
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            justify-content: space-around;
            align-items: center;
            align-content: center;
        }
        .nav {
            display:none;
        }
        .nav ul li {
            width:100%;
            text-align:center;
        }
        .trigger {
            display: block !important;
        }

       
      }

    .seccionfooter{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        align-content: center;
        border-top: #d8d8d85c  0.1rem solid;
        margin-top: 4rem
    }

    .imgbordes{
        border-radius: 50%;
        padding: 0.7rem 0.7rem 0.7rem 0.7rem;
        border: #d8d8d8 0.1rem solid
    }

    .p1   {
        color: black ;
        font-size: 1.2rem;
    }
    
    .p2 {
        color:darkgray;
        font-size: 0.9em;
    }


    
 
    


/**
 * Add your custom styles below
 * 
 * Remember: 
 * - Be organised, use comments and separate your styles into meaningful chunks
 *    for example: General styles, Navigation styles, Hero styles, Footer etc.
 * 
 * - When using Flexbox, remember the items you want to move around need to be inside a parent container set to 'display: flex'
 */


